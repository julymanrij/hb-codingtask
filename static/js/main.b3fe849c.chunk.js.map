{"version":3,"sources":["components/logo/index.js","components/nav/index.js","layouts/main/index.js","components/hbIcon/index.js","components/hbInput/index.js","components/hbButton/index.js","containers/login/index.js","containers/signUp/index.js","containers/profile/index.js","graphql/queries/index.js","graphql/mutations/index.js","components/repository/index.js","components/hbListRepositories/index.js","components/hbCheckBox/index.js","containers/listRepositories/index.js","router.js","index.js"],"names":["Logo","src","alt","Nav","props","className","to","exact","activeClassName","MainLayout","children","HbIcon","name","style","color","fontSize","size","HbInput","htmlFor","label","type","class","required","onChange","showIcon","nameIcon","colorIcon","sizeIcon","HbButton","onClick","onclick","text","Login","useState","error","setError","handleError","message","id","action","onSubmit","event","preventDefault","users","JSON","parse","localStorage","getItem","form","document","getElementById","userData","email","elements","value","password","userExist","filter","user","length","sessionStorage","setItem","stringify","window","location","href","SignUp","phone","Profile","GET_USER","gql","GET_REPOSITORIES","ADD_STAR","REMOVE_STAR","Repository","queryToRefetch","query","variables","login","useMutation","refetchQueries","addStar","removeStar","url","description","viewerHasStarred","e","starrableId","HbListRepositories","useQuery","loading","data","filterFavorites","repositories","nodes","repo","toUpperCase","includes","search","map","HbCheckBox","ListRepositories","loggedIn","setLoggedIn","searchText","setSearchText","setFilterFavorites","refetch","useEffect","OAuth","initialize","process","popup","done","result","removeItem","access_token","target","checked","viewer","HelloBuildRouter","path","component","render","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","ApolloProvider"],"mappings":"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","file":"static/js/main.b3fe849c.chunk.js","sourcesContent":["import './styles.css';\n\nconst Logo = () => {\n  return (\n    <img src=\"/logo-hello-build.png\" alt=\"Logo\" />\n  );\n}\n\nexport default Logo;","import \"./styles.css\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport Logo from \"../logo\";\nconst Nav = (props) => {\n  return (\n    <nav className=\"container\">\n      <Link to=\"/\" className=\"logo\">\n        <Logo />\n      </Link>\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact activeClassName=\"active\">\n            Profile\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/list-repositories\" exact activeClassName=\"active\">\n            List Repositories\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import \"./styles.css\";\nimport Nav from \"../../components/nav\";\n\nconst MainLayout = (props) => {\n  return (\n    <section className=\"mainLayout\">\n      <Nav/>\n      <section className=\"body container\">\n        <section className=\"content\">{props.children}</section>\n      </section>\n    </section>\n  );\n};\n\nexport default MainLayout;\n","import './styles.css';\n\nconst HbIcon = (props) => {\n  return (\n    <div className=\"hbIcon\">\n      <span className={`icon-${props.name}`} style={{color: props.color, fontSize: `${props.size}px`}}></span>\n    </div>\n  );\n};\n\nexport default HbIcon;\n","import \"./styles.css\";\nimport HbIcon from \"../hbIcon\";\nconst HbInput = (props) => {\n  return (\n    <div className=\"hbInput\">\n      <label htmlFor={props.name}>{props.label}</label>\n      <input\n        name={props.name}\n        type={props.type}\n        className={props.class}\n        required={props.required}\n        onChange={props.onChange}\n      />\n      {props.showIcon && <HbIcon name={props.nameIcon} color={props.colorIcon} size={props.sizeIcon}></HbIcon>}\n    </div>\n  );\n};\n\nexport default HbInput;\n","import './styles.css';\n\nconst HbButton = (props) => {\n  return (\n    <div className=\"hbButton\">\n      <button type={props.type} className={props.class} onClick={props.onclick}>{props.text}</button>\n    </div>\n  );\n};\n\nexport default HbButton;\n","import \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport HbInput from \"../../components/hbInput\";\nimport HbButton from \"../../components/hbButton\";\nimport Logo from \"../../components/logo\";\nimport { useState } from \"react\";\n\nconst Login = () => {\n  const [error, setError] = useState(null);\n  const handleError = (message) => {\n    setError(message);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    const form = document.getElementById(\"login\");\n    const userData = {\n      email: form.elements[\"email\"].value,\n      password: form.elements[\"password\"].value,\n    };\n    const userExist = users.filter((user) => user.email === userData.email);\n    if (userExist.length) {\n      if (userExist[0].password === userData.password) {\n        sessionStorage.setItem(\"userData\", JSON.stringify(userData));\n        window.location.href = \"/\";\n      } else {\n        handleError(\"Wrong password\");\n      }\n    } else {\n      handleError(\"User do not exist.\");\n    }\n  };\n  return (\n    <section className=\"login flexColumn container content\">\n      <Logo />\n      <h1>Login</h1>\n      <form\n        id=\"login\"\n        className=\"flexColumn\"\n        action=\"#\"\n        onSubmit={handleSubmit}\n      >\n        <HbInput\n          name=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          required={true}\n        ></HbInput>\n        <HbInput\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          required={true}\n        ></HbInput>\n        {error && <span className=\"error\">{error}</span>}\n        <HbButton text=\"login\" type=\"submit\"></HbButton>\n        <Link to=\"sign-up\">Sign Up</Link>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n","import \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport HbInput from \"../../components/hbInput\";\nimport HbButton from \"../../components/hbButton\";\nimport Logo from \"../../components/logo\";\nimport { useState } from \"react\";\n\nconst SignUp = () => {\n  const [error, setError] = useState(null);\n\n  const handleError = (message) => {\n    setError(message);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n    const form = document.getElementById(\"signup\");\n\n    if (\n      form.elements[\"password\"].value !== form.elements[\"confirmPassword\"].value\n    ) {\n      handleError(\"The password confirmation does not match.\");\n      return;\n    }\n\n    const userData = {\n      name: form.elements[\"name\"].value,\n      phone: form.elements[\"phone\"].value,\n      email: form.elements[\"email\"].value,\n      password: form.elements[\"password\"].value,\n    };\n\n    const userExist = users.filter((user) => user.email === userData.email);\n\n    if (userExist.length) {\n      handleError(\"User already exist.\");\n    } else {\n      localStorage.setItem(\"users\", JSON.stringify([...users, userData]));\n      window.location.href = \"/\";\n    }\n  };\n  return (\n    <section\n      className=\"signUp flexColumn container content\"\n      onSubmit={handleSubmit}\n    >\n      <Logo />\n      <h1>Sign Up</h1>\n      <form className=\"flexColumn\" action=\"\" id=\"signup\">\n        <HbInput name=\"name\" label=\"Name\" type=\"text\" required={true}></HbInput>\n        <HbInput\n          name=\"phone\"\n          label=\"Phone\"\n          type=\"phone\"\n          required={false}\n        ></HbInput>\n        <HbInput\n          name=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          required={true}\n        ></HbInput>\n        <HbInput\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          required={true}\n        ></HbInput>\n        <HbInput\n          name=\"confirmPassword\"\n          label=\"Confirm password\"\n          type=\"password\"\n          required={true}\n        ></HbInput>\n        {error && <span className=\"error\">{error}</span>}\n        <HbButton text=\"Sign Up\" type=\"submit\"></HbButton>\n        <Link to=\"/\">Login</Link>\n      </form>\n    </section>\n  );\n};\n\nexport default SignUp;\n","import './styles.css';\n\nconst Profile = () => {\n  return (\n    <section className=\"profile container content\">\n      <h1>Landing</h1>\n    </section>\n  );\n}\n\nexport default Profile;","import { gql } from \"@apollo/client\";\n\nexport const GET_USER = gql`\n  query {\n    viewer {\n      login\n    }\n  }\n`;\n\nexport const GET_REPOSITORIES = gql`\n  query User($login: String!) {\n    user(login: $login) {\n      repositories(first: 100) {\n        totalCount\n        nodes {\n          url\n          id\n          name\n          description\n          viewerHasStarred\n        }\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_STAR = gql`\n  mutation ($starrableId: ID!) {\n    addStar(input: { starrableId: $starrableId }) {\n      starrable {\n        id\n      }\n    }\n  }\n`;\n\nexport const REMOVE_STAR = gql`\n  mutation ($starrableId: ID!) {\n    removeStar(input: { starrableId: $starrableId }) {\n      starrable {\n        id\n      }\n    }\n  }\n`;\n","import \"./styles.css\";\nimport HbIcon from \"../hbIcon\";\nimport { ADD_STAR, REMOVE_STAR } from \"../../graphql/mutations\";\nimport { GET_REPOSITORIES } from \"../../graphql/queries\";\nimport { useMutation } from \"@apollo/client\";\n\nconst Repository = (props) => {\n  const queryToRefetch = {\n    query: GET_REPOSITORIES,\n    variables: { login: props.user },\n  };\n  const [addStar] = useMutation(ADD_STAR, {\n    refetchQueries: [queryToRefetch],\n  });\n  const [removeStar] = useMutation(REMOVE_STAR, {\n    refetchQueries: [queryToRefetch],\n  });\n\n  return (\n    <div className=\"repository\">\n      <a className=\"repoTitle\" href={props.url}>{props.name}</a>\n      <p>{props.description}</p>\n      {props.viewerHasStarred && (\n        <div\n          className=\"starIconButton\"\n          onClick={(e) => {\n            e.preventDefault();\n            removeStar({ variables: { starrableId: props.id } });\n          }}\n        >\n          <HbIcon name=\"star-full\" color=\"#e4ac10\" size={30}></HbIcon>\n        </div>\n      )}\n      {!props.viewerHasStarred && (\n        <div\n          className=\"starIconButton\"\n          onClick={() => {\n            addStar({ variables: { starrableId: props.id } });\n          }}\n        >\n          <HbIcon name=\"star-empty\" color=\"#e4ac10\" size={30}></HbIcon>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Repository;\n","import \"./styles.css\";\nimport Loader from \"react-loader-spinner\";\nimport { GET_REPOSITORIES } from \"../../graphql/queries\";\nimport Repository from \"../repository\";\nimport { useQuery } from \"@apollo/client\";\n\nconst HbListRepositories = (props) => {\n  const { loading, error, data } = useQuery(GET_REPOSITORIES, {\n    variables: { login: props.user },\n  });\n\n  if (loading)\n    return (\n      <div className=\"loader\">\n        <Loader type=\"Puff\" color=\"#16d499\" size={10} />\n      </div>\n    );\n  if (error) return <p>Error 2:(</p>;\n\n  return (\n    <ul className=\"repositories\">\n      {!props.filterFavorites &&\n        data.user.repositories.nodes\n          .filter(\n            (repo) =>\n              repo.name.toUpperCase().includes(props.search.toUpperCase()) ||\n              props.search === \"\"\n          )\n          .map(({ name, id, description, url, viewerHasStarred }) => (\n            <li key={id}>\n              <Repository\n                name={name}\n                description={description}\n                url={url}\n                viewerHasStarred={viewerHasStarred}\n                id={id}\n                user={props.user}\n              ></Repository>\n            </li>\n          ))}\n\n      {props.filterFavorites &&\n        data.user.repositories.nodes\n          .filter(\n            (repo) =>\n              repo.name.toUpperCase().includes(props.search.toUpperCase()) ||\n              props.search === \"\"\n          )\n          .filter((repo) => repo.viewerHasStarred)\n          .map(({ name, id, description, url, viewerHasStarred }) => (\n            <li key={id}>\n              <Repository\n                name={name}\n                description={description}\n                url={url}\n                viewerHasStarred={viewerHasStarred}\n                id={id}\n                user={props.user}\n              ></Repository>\n            </li>\n          ))}\n    </ul>\n  );\n};\n\nexport default HbListRepositories;\n","import './styles.css';\n\nconst HbCheckBox = (props) => {\n  return (\n    <div className=\"hbCheckBox\">\n      <label htmlFor={props.name}>{props.label}</label>\n      <input name={props.name} type=\"checkbox\" onChange={props.onChange}/>\n    </div>\n  );\n};\n\nexport default HbCheckBox;\n","import \"./styles.css\";\nimport Loader from \"react-loader-spinner\";\nimport React, { useEffect, useState } from \"react\";\nimport { OAuth } from \"oauthio-web\";\nimport HbButton from \"../../components/hbButton\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_USER } from \"../../graphql/queries\";\nimport HbListRepositories from \"../../components/hbListRepositories\";\nimport HbInput from \"../../components/hbInput\";\nimport HbCheckBox from \"../../components/hbCheckBox\";\n\nconst ListRepositories = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [filterFavorites, setFilterFavorites] = useState(false);\n  const { loading, error, data, refetch } = useQuery(GET_USER);\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  function loginGithub() {\n    OAuth.initialize(process.env.REACT_APP_OAUTH_CLIENT_ID);\n    OAuth.popup(\"github\").done(function (result) {\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.setItem(\"token\", result.access_token);\n      refetch();\n      setLoggedIn(true);\n    });\n  }\n\n  function searchRepositories(event) {\n    setSearchText(event.target.value);\n  }\n\n  function checkFilterFavorites(event) {\n    setFilterFavorites(event.target.checked);\n  }\n\n  if (loading)\n    return (\n      <div className=\"loader\">\n        <Loader type=\"Puff\" color=\"#16d499\" size={10} />\n      </div>\n    );\n\n  return (\n    <section className=\"listRepositories flexColumn container content\">\n      <h1>Repositories</h1>\n      {(!loggedIn || error) && (\n        <>\n          <HbButton\n            text=\"Sign in with Github\"\n            onclick={loginGithub}\n            type=\"submit\"\n          ></HbButton>\n        </>\n      )}\n      {loggedIn && error && (\n        <span className=\"error\">\n          Your token has expired, please login again\n        </span>\n      )}\n      {data && (\n        <>\n          <HbInput\n            label=\"Search repository by name\"\n            type=\"search\"\n            showIcon={true}\n            nameIcon=\"search\"\n            onChange={searchRepositories}\n          ></HbInput>\n          \n          <div className=\"filters\">\n            <HbCheckBox\n              label=\"Filter Favorites\"\n              name=\"favorites\"\n              onChange={checkFilterFavorites}\n            ></HbCheckBox>\n          </div>\n\n          <HbListRepositories\n            filterFavorites={filterFavorites}\n            search={searchText}\n            user={data.viewer.login}\n          ></HbListRepositories>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default ListRepositories;\n","import { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n// Layouts\nimport MainLayout from \"./layouts/main\";\n// Containers\nimport Login from \"./containers/login\";\nimport SignUp from \"./containers/signUp\";\nimport Profile from \"./containers/profile\";\nimport ListRepositories from \"./containers/listRepositories\";\nimport { useEffect, useState } from \"react\";\n\nconst HelloBuildRouter = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    if (userData) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        {loggedIn && (\n          <Route path={[\"/list-repositories\", \"/\"]}>\n            <MainLayout>\n              <Switch>\n                <Route\n                  path=\"/list-repositories\"\n                  exact\n                  component={ListRepositories}\n                />\n                <Route path=\"/\" exact component={Profile} />\n                <Route render={() => <Redirect to=\"/\" />} />\n              </Switch>\n            </MainLayout>\n          </Route>\n        )}\n        {!loggedIn && (\n          <Route path={[\"/sign-up\", \"/\"]}>\n            <Switch>\n              <Route path=\"/sign-up\" exact component={SignUp} />\n              <Route path=\"/\" exact component={Login} />\n              <Route render={() => <Redirect to=\"/\" />} />\n            </Switch>\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default HelloBuildRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport HelloBuildRouter from \"./router\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_GITHUB_API_URL,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = sessionStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <HelloBuildRouter />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}